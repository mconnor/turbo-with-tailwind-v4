---
interface Props {
  prime?: boolean;
  textCol?: 'blue' | 'red' | 'yellow';
}
const numArr = [50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 950];
const colorsPrimary = [
  {
    label: 50,
    class: 'bg-primary-50',
  },
  {
    label: 100,
    class: 'bg-primary-100',
  },
  {
    label: 200,
    class: 'bg-primary-200',
  },
  {
    label: 300,
    class: 'bg-primary-300',
  },
  {
    label: 400,
    class: 'bg-primary-400',
  },
  {
    label: 500,
    class: 'bg-primary-500',
  },
  {
    label: 600,
    class: 'bg-primary-600',
  },
  {
    label: 700,
    class: 'bg-primary-700',
  },
  {
    label: 800,
    class: 'bg-primary-800',
  },
  {
    label: 900,
    class: 'bg-primary-900',
  },
  {
    label: 950,
    class: 'bg-primary-950',
  },
];

const colorsAccent = [
  {
    label: 50,
    class: 'bg-accent-50',
  },
  {
    label: 100,
    class: 'bg-accent-100',
  },
  {
    label: 200,
    class: 'bg-accent-200',
  },
  {
    label: 300,
    class: 'bg-accent-300',
  },
  {
    label: 400,
    class: 'bg-accent-400',
  },
  {
    label: 500,
    class: 'bg-accent-500',
  },
  {
    label: 600,
    class: 'bg-accent-600',
  },
  {
    label: 700,
    class: 'bg-accent-700',
  },
  {
    label: 800,
    class: 'bg-accent-800',
  },
  {
    label: 900,
    class: 'bg-accent-900',
  },
  {
    label: 950,
    class: 'bg-accent-950',
  },
];

const { prime, textCol = 'blue' } = Astro.props;

const colors = prime ? colorsPrimary : colorsAccent;
const title: string = prime ? 'Primary Colors' : 'Accent Colors';

const colorVariants = {
  blue: 'hover:bg-blue-500 text-blue-600',
  red: 'hover:bg-red-400 text-red-600',
  yellow: 'hover:bg-yellow-400 text-yellow-600',
};
---

<h2 class="bg-primary-100 dark:bg-primary-900">@repo/ui-astro/Colors</h2>
<h3 class="text-3xl">{title}</h3>
{
  colors.map(({ label, class: className }) => (
    <div class={className}>
      <p class:list={['text-sm font-bold sm:text-5xl', colorVariants[textCol]]}>
        {label}
      </p>
    </div>
  ))
}
